buildscript {
    repositories {
    	mavenCentral()
        gradlePluginPortal()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath 'com.github.xcfrg:MixinGradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group= "me.djtheredstoner"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    clientJvmArgs += "-Dfml.coreMods.load=me.djtheredstoner.perspectivemod.forge.PerspectiveModTweaker"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
    maven { url "https://repo.sk1er.club/repository/maven-releases/" }
    maven { url 'https://repo.polyfrost.cc/releases' }
}

dependencies {
    compile 'org.spongepowered:spongeforge:1.8.9-1890-4.2.0-BETA-1625:dev'
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT")
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT')

    embed "gg.essential:loader-launchwrapper:1.1.0"
    implementation "gg.essential:Essential:1193-10809-SNAPSHOT"

    compileOnly('cc.polyfrost:oneconfig-1.8.9-forge:0.2.0-alpha+') // Should not be included in jar
    compile('cc.polyfrost:oneconfig-wrapper-launchwrapper:1.0.0-beta+') // Should be included in jar
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.perspectivemod.refmap.json"
}

sourceSets {
    main {
        refMap = "mixins.perspectivemod.refmap.json"
    }
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(

            "FMLCorePluginContainsFMLMod": true,
            "FMLCorePlugin": "me.djtheredstoner.perspectivemod.FMLLoadingPlugin",
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.perspectivemod.json",
            "ModSide": "CLIENT",
            "TweakClass": "cc.polyfrost.oneconfig.loader.stage0.LaunchWrapperTweaker",
            //"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0"
    )
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    from(file("LICENSE"))
}
